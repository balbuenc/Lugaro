@page "/DeleteNeighborhood/{id:int}"
@using Model
@using Interfaces
@inject INeighborhoodService NeighborhoodService
@inject NavigationManager NavigationManager


<h1>Detalle de Barrio</h1>

<EditForm Model="@barrio" OnValidSubmit="DeleteArea">
    <DataAnnotationsValidator />
    @*<ValidationSummary />*@
    <div class="table-responsive">
        <table class="table table-sm table-borderless">
            <tr>
                <td>ID</td>
                <td><input type="text" @bind="barrio.id_barrio" disabled="disabled" class="form-control" /></td>
            </tr>
            <tr>
                <td>Ciudad</td>
                <td><input type="text" @bind="barrio.id_ciudad" disabled="disabled" class="form-control" /></td>
            </tr>
            <tr>
                <td>Barrio</td>
                <td><input type="text" @bind="barrio.barrio" disabled="disabled" class="form-control" /></td>
            </tr>

           
            <tr>
                <td colspan="2" style="text-align:center">
                    <input type="submit" value="Delete" />
                    <input type="button" value="Cancel" @onclick="Cancel" />
                </td>
            </tr>
        </table>
    </div>

</EditForm>


@code {

    [Parameter]
    public int id { get; set; }

    Neighborhood barrio = new Neighborhood();

    protected async override Task OnInitializedAsync()
    {
        if (id > 0)
            barrio = await NeighborhoodService.GetNeighborhoodDetails(id);
    }

    protected async Task DeleteArea()
    {
        await NeighborhoodService.DeleteNeighborhood(id);

        NavigateToCategories();
    }

    public void NavigateToCategories()
    {
        NavigationManager.NavigateTo("/Neighborhood");
    }

    public void Cancel()
    {
        NavigateToCategories();
    }
}