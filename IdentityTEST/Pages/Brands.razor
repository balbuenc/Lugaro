@page "/Brand"
@using Model
@using Interfaces
@inject IBrandService BrandService
@inject IOriginService  OriginService
@attribute [Authorize]
@using System.Collections.ObjectModel
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Inputs;
@inject NavigationManager NavigationManager


<div class="container-fluid">
    <p>@Message</p>
    

    <div class="col-lg-12" style="padding:1px; height:50px">
        <div class="content-wrapper">
            <div class="alert alert-title" role="banner"><b>Marcas</b></div>
        </div>
    </div>

    <div class="col-lg-12 control-section">
        <div class="content-wrapper">
            <div class="row">
                @if (GridData == null)
                {
                    <div class="alert alert-warning" role="alert"><p><em>Cargando datos...</em></p></div>
                }
                else
                {
                    <SfGrid ID="Grid" @ref="Grid" AllowPaging="true" Toolbar="@ToolbarItems"  DataSource="@GridData">

                        <GridEvents OnActionBegin="OnBeginHandler" TValue="Brand"></GridEvents>
                        <GridPageSettings PageSize="20"></GridPageSettings>

                        <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true" Mode="EditMode.Dialog"></GridEditSettings>
                        <GridColumns>
                            <GridColumn Field=@nameof(Brand.id_marca) HeaderText="ID" TextAlign="TextAlign.Center" Width="20" IsPrimaryKey="true"></GridColumn>
                            <GridColumn Field=@nameof(Brand.marca) HeaderText="Marca" Width="50"></GridColumn>
                            <GridColumn Field=@nameof(Brand.origen) HeaderText="Origen" Width="30" EditType="EditType.DropDownEdit">
                                <EditTemplate>
                                    <SfDropDownList TValue="Int32" TItem="Origin" @bind-Value="@((context as Brand).id_origen)" Placeholder="Origen" FloatLabelType="FloatLabelType.Always" DataSource="@origins" AllowFiltering="true" FilterType="Syncfusion.Blazor.DropDowns.FilterType.Contains" >
                                        <DropDownListFieldSettings Text="origen" Value="id_origen"></DropDownListFieldSettings>
                                    </SfDropDownList>
                                </EditTemplate>
                            </GridColumn>


                        </GridColumns>
                    </SfGrid>
                }
            </div>
        </div>
    </div>
</div>





@code {

    public string Message { get; set; }
    public string[] ToolbarItems = new string[] { "Add", "Edit", "Delete", "Update", "Cancel", "Search" };

    public IEnumerable<Brand> GridData { get; set; }
    public IEnumerable<Origin> origins { get; set; }

    SfGrid<Brand> Grid { get; set; }

    protected async override Task OnInitializedAsync()
    {
        try
        {
            GridData = await BrandService.GetAllBrands();
            origins = await OriginService.GetAllOrigins();
        }
        catch (Exception ex)
        {
            Message = "Error al obtener marcas: " + ex.Message;
        }
    }

    private async Task OnBeginHandler(ActionEventArgs<Brand> Args)
    {
        if (Args.RequestType == Syncfusion.Blazor.Grids.Action.Save)
        {
            await SaveBrand((Brand)Args.Data);
        }
        else if (Args.RequestType == Syncfusion.Blazor.Grids.Action.Delete)
        {
            await DeleteBrand(((Brand)Args.Data).id_marca);
        }

        return;
    }

    protected async Task SaveBrand(Brand position)
    {
        await BrandService.SaveBrand(position);
        Grid.Refresh();

    }

    protected async Task DeleteBrand(int id)
    {
        await BrandService.DeleteBrand(id);
        Grid.Refresh();

    }


}