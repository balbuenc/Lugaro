@page "/DetalleCliente"
@page "/DetalleCliente/{id:int}"
@using Model
@using Interfaces
@inject IClientService ClientService
@inject NavigationManager NavigationManager
@attribute [Authorize]


<div class="col-12">
    <div class="alert alert-warning" role="alert" style="width:100%"><h4>@Title</h4></div>
</div>
<div class="col-12">

    <EditForm Model="@client" OnValidSubmit="SaveClient">
        <DataAnnotationsValidator></DataAnnotationsValidator>

        <div class="table-responsive">
            <table class="table table-sm table-borderless">
                <tr>
                    <td>ID</td>
                    <td><input type="text" @bind="client.id_cliente" disabled="disabled" class="form-control" /></td>
                </tr>
                <tr>
                    <td>Nombres</td>
                    <td><input type="text" @bind="client.nombres" class="form-control" /></td>
                </tr>
                <tr><td colspan="2"> <ValidationMessage For="@(() => client.nombres)"></ValidationMessage></td></tr>
                <tr>
                    <td>Apellidos</td>
                    <td><input type="text" @bind="client.apellidos" class="form-control" /></td>
                </tr>
                <tr>
                    <td>Código</td>
                    <td><input type="text" @bind="client.codigo" class="form-control" /></td>
                </tr>
                <tr>
                    <td>Nro. documento</td>
                    <td><input type="text" @bind="client.ci" class="form-control" /></td>
                </tr>
                <tr><td colspan="2"> <ValidationMessage For="@(() => client.ci)"></ValidationMessage></td></tr>
                <tr>
                    <td>Razon social</td>
                    <td><input type="text" @bind="client.razon_social" class="form-control" /></td>
                </tr>
                <tr>
                    <td>RUC</td>
                    <td><input type="text" @bind="client.ruc" class="form-control" /></td>
                </tr>
                <tr>
                    <td>Dirección</td>
                    <td><input type="text" @bind="client.direccion" class="form-control" /></td>
                </tr>
                <tr>
                    <td>Teléfono</td>
                    <td><input type="text" @bind="client.telefono" class="form-control" /></td>
                </tr>
                <tr>
                    <td>Email</td>
                    <td><input type="text" @bind="client.email" class="form-control" /></td>
                </tr>
                <tr>
                    <td>Observaciones</td>
                    <td><input type="text" @bind="client.observaciones" class="form-control" /></td>
                </tr>

                <tr>
                    <td>Fec. registro</td>
                    <td><input type="date" @bind="client.fecha_alta" class="form-control" /></td>
                </tr>
                <tr>
                    <td>Sexo</td>
                    <td><input type="text" @bind="client.sexo" class="form-control" /></td>
                </tr>
                <tr>
                    <td>Fecha nacimiento</td>
                    <td><input type="date" @bind="client.fecha_nacimiento" class="form-control" /></td>
                </tr>




                <tr>
                    <td colspan="2" style="text-align:right">
                        <input type="submit" value="Save" class="btn btn-success" />
                        <input type="button" value="Cancel" @onclick="Cancel" class="btn btn-danger" />
                    </td>
                </tr>

            </table>
        </div>
    </EditForm>
</div>



@code {

    [Parameter]
    public int id { get; set; }

    private String Title = "Detalles del cliente";

    Client client = new Client();

    protected async override Task OnInitializedAsync()
    {
        if (id > 0)
        {
            client = await ClientService.GetClientDetails(id);
            Title = "Detalles del cliente";
        }
        else
        {
            Title = "Agregar cliente nuevo";
        }
    }

    protected async Task SaveClient()
    {
        await ClientService.SaveCient(client);

        NavigateToClients();
    }

    public void Cancel()
    {
        NavigateToClients();
    }

    public void NavigateToClients()
    {
        NavigationManager.NavigateTo("/cliente");
    }
}
