@page "/Cliente"
@using Model
@using Interfaces
@inject IClientService ClientService
@inject INeighborhoodService NeighborhoodService
@inject INationalityService NationalityService
@inject IClientTypeService ClientTypeService
@inject ICivilStatusService CivilStatusService
@attribute [Authorize]
@using Syncfusion.Blazor
@using Syncfusion.Blazor.Data
@using Syncfusion.Blazor.Grids
@using System.Collections.ObjectModel
@inject NavigationManager NavigationManager
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Inputs;
@using Syncfusion.Blazor.Calendars;




<div class="container-fluid">
    <div class="col-lg-12 control-section">
        <div class="content-wrapper">
            <div class="row">
                <div class="col-10">
                    <div class="alert alert-heading" style="width:100%" role="banner"><h3>Clientes</h3></div>
                </div>

            </div>
        </div>
    </div>


    <p>@Messsage</p>
    <span class="error">@ErrorDetails</span>


    <div class="col-lg-12 control-section">
        <div class="content-wrapper">
            <div class="row">
                @if (GridData == null)
                {
                    <div class="alert alert-warning" role="alert"><p><em>Cargando datos...</em></p></div>
                }
                else
                {
                    <SfGrid ID="Grid" @ref="Grid" AllowPaging="true" AllowSorting="true" Toolbar="@ToolbarItems" AllowFiltering="true" DataSource="@GridData" AllowGrouping="true">

                        <GridEvents OnActionBegin="OnBeginHandler" TValue="Client"></GridEvents>
                        <GridPageSettings PageSize="20"></GridPageSettings>

                        <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true" Mode="EditMode.Dialog" Dialog="DialogParams">
                            <HeaderTemplate>
                                @{
                                    var cli = (context as Client);
                                }
                                <span>Detalle de Cliente: @(cli.razon_social)</span>
                            </HeaderTemplate>
                            <Template>
                                @{
                                    var cli = (context as Client);
                                }
                                <div>
                                    <div class="form-row">
                                        <div class="form-group col-md-3">

                                            <SfNumericTextBox @bind-Value="@(cli.id_funcionario)" Enabled="false" Placeholder="ID" FloatLabelType="FloatLabelType.Always"></SfNumericTextBox>
                                        </div>
                                        <div class="form-group col-md-6">

                                            <SfTextBox @bind-Value="@(cli.razon_social)" Enabled="true" Placeholder="Razón social" FloatLabelType="FloatLabelType.Always"> </SfTextBox>
                                        </div>
                                    </div>
                                    <div class="form-row">
                                        <div class="form-group col-md-6">

                                            <SfTextBox @bind-Value="@(cli.nombres)" Enabled="true" Placeholder="Nombres" FloatLabelType="FloatLabelType.Always"> </SfTextBox>
                                        </div>
                                        <div class="form-group col-md-6">

                                            <SfTextBox @bind-Value="@(cli.apellidos)" Enabled="true" Placeholder="Apellidos" FloatLabelType="FloatLabelType.Always"> </SfTextBox>
                                        </div>
                                    </div>
                                    <div class="form-row">
                                        <div class="form-group col-md-3">
                                            <SfTextBox @bind-Value="@(cli.ci)" Enabled="true" Placeholder="Nro. Documento" FloatLabelType="FloatLabelType.Always"> </SfTextBox>
                                        </div>
                                        <div class="form-group col-md-3">
                                            <SfTextBox @bind-Value="@(cli.ruc)" Enabled="true" Placeholder="R.U.C." FloatLabelType="FloatLabelType.Always"> </SfTextBox>
                                        </div>
                                        <div class="form-group col-md-6">
                                            <SfTextBox @bind-Value="@(cli.direccion)" Enabled="true" Placeholder="Dirección" FloatLabelType="FloatLabelType.Always"> </SfTextBox>
                                        </div>
                                    </div>
                                    <div class="form-row">
                                        <div class="form-group col-md-3">

                                            <SfDropDownList DataSource="@LocalSexo"
                                                            TItem="Sexo"
                                                            TValue="string"
                                                            @bind-Value="@(cli.sexo)"
                                                            Placeholder="Sexo"
                                                            FloatLabelType="FloatLabelType.Always">
                                                <DropDownListFieldSettings Value="ID" Text="Text"></DropDownListFieldSettings>
                                            </SfDropDownList>
                                        </div>
                                        <div class="form-group col-md-3">

                                            <SfDatePicker @bind-Value="@(cli.fecha_nacimiento)"
                                                          Placeholder="Fec. nacimiento"
                                                          FloatLabelType="FloatLabelType.Always"></SfDatePicker>
                                        </div>
                                        <div class="form-group col-md-3">

                                            <SfDropDownList DataSource="@nationalitys"
                                                            TItem="Nationality"
                                                            TValue="Int32"
                                                            @bind-Value="@(cli.id_nacionalidad)"
                                                            Placeholder="Nacionalidad"
                                                            FloatLabelType="FloatLabelType.Always">
                                                <DropDownListFieldSettings Text="nacionalidad" Value="id_nacionalidad"></DropDownListFieldSettings>
                                            </SfDropDownList>
                                        </div>
                                        <div class="form-group col-md-3">
                                            <SfDropDownList TValue="Int32" TItem="ClientType" @bind-Value="@(cli.id_tipo_cliente)" Placeholder="Tipo cliente" FloatLabelType="FloatLabelType.Always" DataSource="@clientTypes">
                                                <DropDownListFieldSettings Text="tipo" Value="id_tipo_cliente"></DropDownListFieldSettings>
                                            </SfDropDownList>
                                        </div>
                                    </div>
                                    <div class="form-row">
                                        <div class="form-group col-md-3">
                                            <SfDropDownList TValue="Int32" TItem="Neighborhood" @bind-Value="@(cli.id_barrio)" Placeholder="Barrio" DataSource="@neighborhoods" FloatLabelType="FloatLabelType.Always">
                                                <DropDownListFieldSettings Text="barrio" Value="id_barrio"></DropDownListFieldSettings>
                                            </SfDropDownList>
                                        </div>
                                        <div class="form-group col-md-3">
                                            <SfDropDownList TValue="Int32" TItem="CivilStatus" @bind-Value="@(cli.id_estado_civil)" Placeholder="Estado civil" DataSource="@civilStatus" FloatLabelType="FloatLabelType.Always">
                                                <DropDownListFieldSettings Text="estado_civil" Value="id_estado_civil"></DropDownListFieldSettings>
                                            </SfDropDownList>
                                        </div>
                                    </div>
                                </div>
                            </Template>
                        </GridEditSettings>
                        <GridColumns>
                            <GridColumn Field=@nameof(Client.id_cliente) HeaderText="ID" TextAlign="TextAlign.Center" Width="5" IsPrimaryKey="true"></GridColumn>

                            <GridColumn Field=@nameof(Client.nombres) HeaderText="Nombres" Width="20"></GridColumn>
                            <GridColumn Field=@nameof(Client.apellidos) HeaderText="Apellidos" Width="20"></GridColumn>

                            <GridColumn Field=@nameof(Client.razon_social) HeaderText="Razón social" Width="30"></GridColumn>
                            <GridColumn Field=@nameof(Client.ci) HeaderText="Nro. doc." Width="10"></GridColumn>
                            <GridColumn Field=@nameof(Client.ruc) HeaderText="R.U.C." Width="10"></GridColumn>
                            <GridColumn Field="@nameof(Client.telefono)" HeaderText="Telefono"  Width="20"></GridColumn>
                            <GridColumn Field="@nameof(Client.vendedor)" HeaderText="Vendedor" Width="20"></GridColumn>

                        </GridColumns>
                    </SfGrid>
                }

            </div>
        </div>

    </div>

</div>


@code {
    //public IEnumerable<Client> clients { get; set; }
    public string Messsage { get; set; }
    public string[] ToolbarItems = new string[] { "Add", "Edit", "Delete", "Update", "Cancel" };
    public string ErrorDetails = "";

    public IEnumerable<Client> GridData { get; set; }
    public IEnumerable<Neighborhood> neighborhoods { get; set; }
    public IEnumerable<Nationality> nationalitys { get; set; }
    public IEnumerable<ClientType> clientTypes { get; set; }
    public IEnumerable<CivilStatus> civilStatus { get; set; }



    SfGrid<Client> Grid { get; set; }

    private DialogSettings DialogParams = new DialogSettings { Width = "850px", EnableResize = true, AllowDragging = true };

    public class Sexo
    {
        public string ID { get; set; }
        public string Text { get; set; }
    }
    List<Sexo> LocalSexo = new List<Sexo> {
    new Sexo() { ID= "M", Text= "Masculino" },
    new Sexo() { ID= "F", Text= "Femenino" },
  };


    public IEditorSettings CivilStatusEditParams = new DropDownEditCellParams
    {
        Params = new DropDownListModel<object, object>() { AllowFiltering = true, ShowClearButton = true }
    };


    protected override async Task OnInitializedAsync()
    {
        try
        {
            GridData = await ClientService.GetAllClients();
            neighborhoods = await NeighborhoodService.GetAllNeighborhoods();
            nationalitys = await NationalityService.GetAllNationalitys();
            clientTypes = await ClientTypeService.GetAllClientTypes();
            civilStatus = await CivilStatusService.GetAllCivilStatus();
        }
        catch (Exception ex)
        {
            Messsage = "Error al obtener clientes: " + ex.Message;
        }
    }



    private async Task OnBeginHandler(ActionEventArgs<Client> Args)
    {
        if (Args.RequestType == Syncfusion.Blazor.Grids.Action.Save)
        {
            await SaveClient((Client)Args.Data);
        }
        else if (Args.RequestType == Syncfusion.Blazor.Grids.Action.Delete)
        {
            await DeleteClient(((Client)Args.Data).id_cliente);
        }

        return;
    }

    protected async Task SaveClient(Client client)
    {
        await ClientService.SaveCient(client);
        Grid.Refresh();
        //ReloadPage();
    }

    protected async Task DeleteClient(int id)
    {
        await ClientService.DeleteClient(id);
        Grid.Refresh();
        //ReloadPage();
    }

    protected void ReloadPage()
    {
        NavigationManager.NavigateTo("/Cliente", true);
    }
}


