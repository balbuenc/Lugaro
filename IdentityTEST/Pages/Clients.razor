@page "/Cliente"
@using Model
@using Interfaces
@inject IClientService ClientService
@attribute [Authorize]
@using Syncfusion.Blazor
@using Syncfusion.Blazor.Data
@using Syncfusion.Blazor.Grids


<div class="container-fluid">
    <div class="col-lg-12 control-section">
        <div class="content-wrapper">
            <div class="row">
                <div class="col-10">
                    <div class="alert alert-heading" style="width:100%" role="banner"><h3>Clientes</h3></div>
                </div>
                <div class="col-2">
                    <div class="btn btn-outline-danger">
                        <a href="/DetalleClient"><i>Agregar</i></a>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <p>@Messsage</p>


    <div class="col-lg-12 control-section">
        <div class="content-wrapper">
            <div class="row">
                @if (clients == null)
                {
                    <div class="alert alert-warning" role="alert"><p><em>Cargando datos...</em></p></div>
                }
                else
                {
                    <SfGrid  ID="Grid" DataSource="@clients" AllowPaging="true" AllowSorting="true" Toolbar="@ToolbarItems"  AllowFiltering="true" >
                        
                        <GridPageSettings PageSize="20"></GridPageSettings>
                        
                        <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true" Mode="EditMode.Dialog"></GridEditSettings>
                        <GridColumns>
                            <GridColumn Field=@nameof(Client.id_cliente) HeaderText="ID" TextAlign="TextAlign.Center" Width="5" IsPrimaryKey="true"></GridColumn>

                            <GridColumn Field=@nameof(Client.nombres) HeaderText="Nombres" Width="20"></GridColumn>
                            <GridColumn Field=@nameof(Client.apellidos) HeaderText="Apellidos" Width="20"></GridColumn>

                            <GridColumn Field=@nameof(Client.razon_social) HeaderText="Razón social" Width="30"></GridColumn>
                            <GridColumn Field=@nameof(Client.ci) HeaderText="Nro. doc." Width="10"></GridColumn>
                            <GridColumn Field=@nameof(Client.email) HeaderText="Email" Width="10"></GridColumn>

                        </GridColumns>
                    </SfGrid>
                }

            </div>
        </div>

    </div>

</div>


@code {
    public IEnumerable<Client> clients { get; set; }
    public string Messsage { get; set; }
    public string[] ToolbarItems = new string[] { "Add", "Edit", "Delete", "Update", "Cancel" };

    protected async override Task OnInitializedAsync()
    {
        try
        {
            clients = await ClientService.GetAllClients();
        }
        catch (Exception ex)
        {
            Messsage = "Error al obtener clientes: " + ex.Message;
        }
    }
}
