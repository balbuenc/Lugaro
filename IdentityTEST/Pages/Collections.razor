@page "/Collection"
@using Syncfusion.Blazor.Grids
@using Model
@using Interfaces
@inject ICollectionService CollectionService
@attribute [Authorize]
@using System.Collections.ObjectModel
@using Syncfusion.Blazor.Inputs
@using System.IO


<div class="container-fluid">
    <p>@Messsage</p>

    <div class="col-lg-12" style="padding:1px; height:50px">
        <div class="content-wrapper">
            <div class="alert alert-primary" role="banner"><b>Cobranzas</b></div>
        </div>
    </div>

    <div class="col-lg-12 control-section">
        <div class="content-wrapper">
            <div class="row">
                @if (GridData == null)
                {
                    <div class="alert alert-warning" role="alert"><p><em>Cargando datos...</em></p></div>
                }
                else
                {
                    <SfGrid ID="Grid" @ref="Grid" AllowPaging="true" Toolbar="@ToolbarItems" AllowSorting="true" DataSource="@GridData">

                        <GridEvents OnActionBegin="OnBeginHandler" TValue="Collection"></GridEvents>
                        <GridPageSettings PageSize="20"></GridPageSettings>

                        <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true" Mode="EditMode.Dialog"></GridEditSettings>
                        <GridColumns>
                            <GridColumn Field=@nameof(Collection.id_cobranza) HeaderText="ID" TextAlign="TextAlign.Center" Width="30" IsPrimaryKey="true"></GridColumn>
                            <GridColumn Field=@nameof(Collection.cliente) HeaderText="Cliente" Width="40"></GridColumn>
                            <GridColumn Field=@nameof(Collection.ruc) HeaderText="RUC" Width="15"></GridColumn>
                            <GridColumn Field=@nameof(Collection.fecha) HeaderText="Fecha cobro" Width="15"></GridColumn>
                            <GridColumn Field=@nameof(Collection.cuota) HeaderText="cuota" Width="10"></GridColumn>
                            <GridColumn Field=@nameof(Collection.funcionario) HeaderText="Funcionario" Width="10"></GridColumn>
                            <GridColumn Field=@nameof(Collection.monto_cobrado) HeaderText="Monto" Width="20" Format="N0"></GridColumn>
                            <GridColumn Field=@nameof(Collection.medio_pago) HeaderText="Medio" Width="20"></GridColumn>
                            <GridColumn Field=@nameof(Collection.nro_recibo) HeaderText="#Recibo" Width="20"></GridColumn>
                            <GridColumn Field=@nameof(Collection.nro_comprobante) HeaderText="#Comprobante" Width="20"></GridColumn>
                            <GridColumn Field=@nameof(Collection.nro_transaccion) HeaderText="#Transaccion" Width="20"></GridColumn>
                        </GridColumns>
                    </SfGrid>
                }
            </div>
        </div>
    </div>
</div>





@code {

    public string Messsage { get; set; }
    public string[] ToolbarItems = new string[] { "Add", "Edit", "Delete", "Update", "Cancel", "Search" };

    public IEnumerable<Collection> GridData { get; set; }

    SfGrid<Collection> Grid { get; set; }

    protected async override Task OnInitializedAsync()
    {
        try
        {
            GridData = await CollectionService.GetAllCollections();
        }
        catch (Exception ex)
        {
            Messsage = "Error al obtener cobranzas: " + ex.Message;
        }
    }

    private async Task OnBeginHandler(ActionEventArgs<Collection> Args)
    {
        if (Args.RequestType == Syncfusion.Blazor.Grids.Action.Save)
        {
            await SaveCollection((Collection)Args.Data);
        }
        else if (Args.RequestType == Syncfusion.Blazor.Grids.Action.Delete)
        {
            await DeleteCollection(((Collection)Args.Data).id_cobranza);
        }

        return;
    }

    protected async Task SaveCollection(Collection nationality)
    {
        await CollectionService.SaveCollection(nationality);
        Grid.Refresh();
    }

    protected async Task DeleteCollection(int id)
    {
        await CollectionService.DeleteCollection(id);
        Grid.Refresh();
    }


}

