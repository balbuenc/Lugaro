@page "/Nationality"
@using Syncfusion.Blazor.Grids
@using Model
@using Interfaces
@inject INationalityService NationalityService
@attribute [Authorize]
@using System.Collections.ObjectModel



<div class="container-fluid">
    <div class="col-lg-12 control-section">
        <div class="content-wrapper">
            <div class="row">
                <div class="col-10">
                    <div class="alert alert-dark" style="width:100%" role="banner"><h3>Nacionalidades</h3></div>
                </div>

            </div>
        </div>
    </div>

    <p>@Messsage</p>

    <div class="col-lg-12 control-section">
        <div class="content-wrapper">
            <div class="row">
                @if (GridData == null)
                {
                    <div class="alert alert-warning" role="alert"><p><em>Cargando datos...</em></p></div>
                }
                else
                {
                    <SfGrid ID="Grid" @ref="Grid" AllowPaging="true" AllowSorting="true" Toolbar="@ToolbarItems" AllowFiltering="true" DataSource="@GridData">

                        <GridEvents OnActionBegin="OnBeginHandler" TValue="Nationality"></GridEvents>
                        <GridPageSettings PageSize="20"></GridPageSettings>

                        <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true" Mode="EditMode.Dialog"></GridEditSettings>
                        <GridColumns>
                            <GridColumn Field=@nameof(Nationality.id_nacionalidad) HeaderText="ID" TextAlign="TextAlign.Center" Width="30" IsPrimaryKey="true"></GridColumn>
                            <GridColumn Field=@nameof(Nationality.nacionalidad) HeaderText="Nacionalidad" Width="50"></GridColumn>

                        </GridColumns>
                    </SfGrid>

                }
            </div>
        </div>
    </div>
</div>





@code {

    public string Messsage { get; set; }
    public string[] ToolbarItems = new string[] { "Add", "Edit", "Delete", "Update", "Cancel" };

    public IEnumerable<Nationality> GridData { get; set; }

    SfGrid<Nationality> Grid { get; set; }

    protected async override Task OnInitializedAsync()
    {
        try
        {
            GridData = await NationalityService.GetAllNationalitys();
        }
        catch (Exception ex)
        {
            Messsage = "Error al obtener nacionalidades: " + ex.Message;
        }
    }

    private async Task OnBeginHandler(ActionEventArgs<Nationality> Args)
    {
        if (Args.RequestType == Syncfusion.Blazor.Grids.Action.Save)
        {
            await SaveNationality((Nationality)Args.Data);
        }
        else if (Args.RequestType == Syncfusion.Blazor.Grids.Action.Delete)
        {
            await DeleteNationality(((Nationality)Args.Data).id_nacionalidad);
        }

        return;
    }

    protected async Task SaveNationality(Nationality nationality)
    {
        await NationalityService.SaveNationality(nationality);
        Grid.Refresh();
    }

    protected async Task DeleteNationality(int id)
    {
        await NationalityService.DeleteNationality(id);
        Grid.Refresh();
    }
}
